// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Web_Programlama_Projesi.Data;

#nullable disable

namespace Web_Programlama_Projesi.Migrations
{
    [DbContext(typeof(KuaferContext))]
    partial class KuaferContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Web_Programlama_Projesi.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("TimeSlotId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TimeSlotId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Web_Programlama_Projesi.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Expertise")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Expertise = "Saç Kesimi",
                            IsActive = true,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Web_Programlama_Projesi.Models.Salon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkingHours")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Salons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Saç Kesim Salonu",
                            WorkingHours = "09:00-17:00"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Güzellik Salonu",
                            WorkingHours = "10:00-18:00"
                        });
                });

            modelBuilder.Entity("Web_Programlama_Projesi.Models.TimeSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("boolean");

                    b.Property<int>("SalonId")
                        .HasColumnType("integer");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SalonId");

                    b.ToTable("TimeSlots");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndTime = "10:00",
                            IsAvailable = true,
                            SalonId = 1,
                            StartTime = "09:00"
                        },
                        new
                        {
                            Id = 2,
                            EndTime = "11:00",
                            IsAvailable = true,
                            SalonId = 1,
                            StartTime = "10:00"
                        },
                        new
                        {
                            Id = 3,
                            EndTime = "12:00",
                            IsAvailable = true,
                            SalonId = 1,
                            StartTime = "11:00"
                        },
                        new
                        {
                            Id = 4,
                            EndTime = "11:00",
                            IsAvailable = true,
                            SalonId = 2,
                            StartTime = "10:00"
                        },
                        new
                        {
                            Id = 5,
                            EndTime = "12:00",
                            IsAvailable = true,
                            SalonId = 2,
                            StartTime = "11:00"
                        },
                        new
                        {
                            Id = 6,
                            EndTime = "13:00",
                            IsAvailable = true,
                            SalonId = 2,
                            StartTime = "12:00"
                        });
                });

            modelBuilder.Entity("Web_Programlama_Projesi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Password = "123",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Password = "123",
                            Role = "User",
                            Username = "user"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Password = "123",
                            Role = "Employee",
                            Username = "ahmet"
                        });
                });

            modelBuilder.Entity("Web_Programlama_Projesi.Models.Appointment", b =>
                {
                    b.HasOne("Web_Programlama_Projesi.Models.User", "Customer")
                        .WithMany("Appointments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_Programlama_Projesi.Models.Employee", "Employee")
                        .WithMany("Appointments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_Programlama_Projesi.Models.TimeSlot", "TimeSlot")
                        .WithMany("Appointments")
                        .HasForeignKey("TimeSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("TimeSlot");
                });

            modelBuilder.Entity("Web_Programlama_Projesi.Models.Employee", b =>
                {
                    b.HasOne("Web_Programlama_Projesi.Models.User", "User")
                        .WithOne("EmployeeDetails")
                        .HasForeignKey("Web_Programlama_Projesi.Models.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Web_Programlama_Projesi.Models.TimeSlot", b =>
                {
                    b.HasOne("Web_Programlama_Projesi.Models.Salon", "Salon")
                        .WithMany("TimeSlots")
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("Web_Programlama_Projesi.Models.Employee", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Web_Programlama_Projesi.Models.Salon", b =>
                {
                    b.Navigation("TimeSlots");
                });

            modelBuilder.Entity("Web_Programlama_Projesi.Models.TimeSlot", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Web_Programlama_Projesi.Models.User", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("EmployeeDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
